name: Playwright Tests
on:
  pull_request:
jobs:
  test_e2e:
    name: Playwright tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_TEST_BASE_URL: "http://localhost:3000"
      DATABASE_URL: ${{ secrets.database_url }}
      DATABASE_HOST: ${{ secrets.database_host }}
      DATABASE_USERNAME: ${{ secrets.database_username }}
      DATABASE_PASSWORD: ${{ secrets.database_password }}
      NXCACHE_AWS_ACCESS_KEY_ID: ${{secrets.nxcache_aws_access_key_id}}
      NXCACHE_AWS_SECRET_ACCESS_KEY: ${{secrets.nxcache_aws_secret_access_key}}
      NXCACHE_AWS_ENDPOINT: ${{secrets.nxcache_aws_endpoint}}
      NXCACHE_AWS_REGION: ${{secrets.nxcache_aws_region}}
      NXCACHE_AWS_BUCKET: ${{secrets.nxcache_aws_bucket}}
      NXCACHE_AWS_FORCE_PATH_STYLE: ${{secrets.nxcache_aws_force_path_style}}
      OTP_SECRET: ${{ secrets.OTP_SECRET }}
      OTP_USER: ${{ secrets.OTP_USER }}
      OTP_SERVICE: ${{ secrets.OTP_SERVICE }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 7
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
      - run: pnpm install
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'
      - run: pnpm run test:e2e
